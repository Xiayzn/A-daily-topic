/*
题目描述:

给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。
注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。

解题思路：
1.查看给定结点的右孩子是否存在，如果存在右孩子，那么答案就是右孩子结点一直向左到底
2.右孩子不存在，向上找父节点，直到当前节点是父节点的左孩子,答案就是父节点
3.如果一直到根节点都没有就返回空指针
*/

/*

//代码：
struct TreeLinkNode {
    int val;
    struct TreeLinkNode *left;
    struct TreeLinkNode *right;
    struct TreeLinkNode *next;
    TreeLinkNode(int x) :val(x), left(NULL), right(NULL), next(NULL) {
        
    }
};
*/
class Solution {
public:
    TreeLinkNode* GetNext(TreeLinkNode* pNode)
    {
        if (pNode == nullptr)
            return nullptr;
        if (pNode->right != nullptr)
        {
            pNode = pNode->right;
            while (pNode->left != nullptr)
                pNode = pNode->left;
            return pNode;
        }
        else
        {
            while (pNode->next != nullptr)
            {
                if (pNode->next->left == pNode)
                    return pNode->next;
                pNode = pNode->next;
            }
            return nullptr;
        }

    }
};
